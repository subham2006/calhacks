{
  "version": 3,
  "sources": ["../../../../src/lib/shapes/shared/useAsset.ts"],
  "sourcesContent": ["import {\n\tTLAssetId,\n\tTLShapeId,\n\tuseDelaySvgExport,\n\tuseEditor,\n\tuseSvgExportContext,\n\tuseValue,\n} from '@tldraw/editor'\nimport { useEffect, useRef, useState } from 'react'\n\n/**\n * This is a handy helper hook that resolves an asset to an optimized URL for a given shape, or its\n * {@link @tldraw/editor#Editor.createTemporaryAssetPreview | placeholder} if the asset is still\n * uploading. This is used in particular for high-resolution images when you want lower and higher\n * resolution depending on the context.\n *\n * For image scaling to work, you need to implement scaled URLs in\n * {@link @tldraw/tlschema#TLAssetStore.resolve}.\n *\n * @public\n */\nexport function useAsset(options: {\n\tshapeId: TLShapeId\n\tassetId: TLAssetId | null\n\twidth: number\n}) {\n\tconst { shapeId, assetId, width } = options\n\tconst editor = useEditor()\n\tconst [url, setUrl] = useState<string | null>(null)\n\tconst [isPlaceholder, setIsPlaceholder] = useState(false)\n\tconst isExport = !!useSvgExportContext()\n\tconst asset = assetId ? editor.getAsset(assetId) : null\n\tconst culledShapes = editor.getCulledShapes()\n\tconst isCulled = culledShapes.has(shapeId)\n\tconst didAlreadyResolve = useRef(false)\n\tconst isReady = useDelaySvgExport()\n\n\tuseEffect(() => {\n\t\tif (url) didAlreadyResolve.current = true\n\t}, [url])\n\n\tconst shapeScale = asset && 'w' in asset.props ? width / asset.props.w : 1\n\t// We debounce the zoom level to reduce the number of times we fetch a new image and,\n\t// more importantly, to not cause zooming in and out to feel janky.\n\tconst screenScale = useValue('zoom level', () => editor.getZoomLevel() * shapeScale, [\n\t\teditor,\n\t\tshapeScale,\n\t])\n\n\tuseEffect(() => {\n\t\tif (url) didAlreadyResolve.current = true\n\t}, [url])\n\n\tuseEffect(() => {\n\t\tif (!isExport && isCulled) return\n\n\t\tif (assetId && !asset?.props.src) {\n\t\t\tconst preview = editor.getTemporaryAssetPreview(assetId)\n\n\t\t\tif (preview) {\n\t\t\t\tsetUrl(preview)\n\t\t\t\tsetIsPlaceholder(true)\n\t\t\t\tisReady()\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\n\t\tlet isCancelled = false\n\n\t\tasync function resolve() {\n\t\t\tconst resolvedUrl = await editor.resolveAssetUrl(assetId, {\n\t\t\t\tscreenScale,\n\t\t\t\tshouldResolveToOriginal: isExport,\n\t\t\t})\n\n\t\t\tif (!isCancelled) {\n\t\t\t\tsetUrl(resolvedUrl)\n\t\t\t\tsetIsPlaceholder(false)\n\t\t\t\tisReady()\n\t\t\t}\n\t\t}\n\n\t\t// If we already resolved the URL, debounce fetching potentially multiple image variations.\n\t\tif (didAlreadyResolve.current) {\n\t\t\tconst timer = editor.timers.setTimeout(resolve, 500)\n\t\t\treturn () => {\n\t\t\t\tclearTimeout(timer)\n\t\t\t\tisCancelled = true\n\t\t\t}\n\t\t} else {\n\t\t\tresolve()\n\t\t\treturn () => {\n\t\t\t\tisCancelled = true\n\t\t\t}\n\t\t}\n\t}, [assetId, asset?.props.src, isCulled, screenScale, editor, isExport, isReady])\n\n\treturn { asset, url, isPlaceholder }\n}\n"],
  "mappings": "AAAA;AAAA,EAGC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,WAAW,QAAQ,gBAAgB;AAarC,SAAS,SAAS,SAItB;AACF,QAAM,EAAE,SAAS,SAAS,MAAM,IAAI;AACpC,QAAM,SAAS,UAAU;AACzB,QAAM,CAAC,KAAK,MAAM,IAAI,SAAwB,IAAI;AAClD,QAAM,CAAC,eAAe,gBAAgB,IAAI,SAAS,KAAK;AACxD,QAAM,WAAW,CAAC,CAAC,oBAAoB;AACvC,QAAM,QAAQ,UAAU,OAAO,SAAS,OAAO,IAAI;AACnD,QAAM,eAAe,OAAO,gBAAgB;AAC5C,QAAM,WAAW,aAAa,IAAI,OAAO;AACzC,QAAM,oBAAoB,OAAO,KAAK;AACtC,QAAM,UAAU,kBAAkB;AAElC,YAAU,MAAM;AACf,QAAI,IAAK,mBAAkB,UAAU;AAAA,EACtC,GAAG,CAAC,GAAG,CAAC;AAER,QAAM,aAAa,SAAS,OAAO,MAAM,QAAQ,QAAQ,MAAM,MAAM,IAAI;AAGzE,QAAM,cAAc,SAAS,cAAc,MAAM,OAAO,aAAa,IAAI,YAAY;AAAA,IACpF;AAAA,IACA;AAAA,EACD,CAAC;AAED,YAAU,MAAM;AACf,QAAI,IAAK,mBAAkB,UAAU;AAAA,EACtC,GAAG,CAAC,GAAG,CAAC;AAER,YAAU,MAAM;AACf,QAAI,CAAC,YAAY,SAAU;AAE3B,QAAI,WAAW,CAAC,OAAO,MAAM,KAAK;AACjC,YAAM,UAAU,OAAO,yBAAyB,OAAO;AAEvD,UAAI,SAAS;AACZ,eAAO,OAAO;AACd,yBAAiB,IAAI;AACrB,gBAAQ;AACR;AAAA,MACD;AAAA,IACD;AAEA,QAAI,cAAc;AAElB,mBAAe,UAAU;AACxB,YAAM,cAAc,MAAM,OAAO,gBAAgB,SAAS;AAAA,QACzD;AAAA,QACA,yBAAyB;AAAA,MAC1B,CAAC;AAED,UAAI,CAAC,aAAa;AACjB,eAAO,WAAW;AAClB,yBAAiB,KAAK;AACtB,gBAAQ;AAAA,MACT;AAAA,IACD;AAGA,QAAI,kBAAkB,SAAS;AAC9B,YAAM,QAAQ,OAAO,OAAO,WAAW,SAAS,GAAG;AACnD,aAAO,MAAM;AACZ,qBAAa,KAAK;AAClB,sBAAc;AAAA,MACf;AAAA,IACD,OAAO;AACN,cAAQ;AACR,aAAO,MAAM;AACZ,sBAAc;AAAA,MACf;AAAA,IACD;AAAA,EACD,GAAG,CAAC,SAAS,OAAO,MAAM,KAAK,UAAU,aAAa,QAAQ,UAAU,OAAO,CAAC;AAEhF,SAAO,EAAE,OAAO,KAAK,cAAc;AACpC;",
  "names": []
}
